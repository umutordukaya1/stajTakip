<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAWQSURBVFhHtZbr
        T5NXHMfZzJbthdl8tT9gyZIly94s29iWvVjMFpKZXRLZ4gVoa6dumUOdoFaQqiCC04VLlcKgIlSwE68E
        iHhBBohU2qd9Wi4t0D69AC0KrQJjvTy/nXN6ekGq0VC+yTc5fc7l+zm/c54Hkp4l/7m0Qv+5zfAsByq/
        tPtlH9/xyT79kE5LnALKzZvihcY6UP3VA78sGZB9ftknKXRqYgSq1FV+5cZ78YLDDqrEQQoAvvJkDuQf
        vEKnL18L5R+9g3Y1669bD4H2/GCgLQ+WuOWAz/9XCgEgEIk8Cv+p5CN4UV6tBHBz8W3Ru2G4FwK137tC
        EAk8hoAsuRIvCjZ9/HBsDGC+j6pxuDfhAHyr9BbfVQUwORI/HJsCANvWw3eWdQXaD31Npy9fYOrz4cX5
        yVE+bjh2GGBMqya/p7g6On35Igtju7mFRaGxfhLAzV2g05cvtLD2xQFsB+j05QtAtQo4/RpwW91LgsO2
        sCEAk1oO06Nv0KmJFQq6tiQ47FGtlwCM3M+gwxMvVNbPUVhwSfjEaOiOmO+Pgb3ndTp8ZYRu91YUGn0b
        XBZ87mjnGg+MqN+jw1ZWKHg+snOOBbAPIpCxetq9ctJznjVjjmlJZPcx9rkcwwO2hz+qAFbR4YmTQGF5
        U1zD1jIWj6/X7Po3HoDfZQeDzQvymzZvyklNE3p1XqbTl6dN1f3Fm07rfRkVRmA5L7IH5l2OJQAj3GQQ
        A/zZZoHPCjWw9g9tIKWiby1d5sX1TXXX6m1Kg0lcYwQcjt099JDskrV5+IlxNyq7HWYnnWB1hJ6HATae
        MsAXRQykluv578r75XTJ55dAcfu1X5QGp+TvEUivZCMAdf84ULgX9EPj/GTzLX6hVA6z1UqwdKiDOusM
        MFYP7DtvImPTThthvUxP2t/K1BV06eeTqFZ3A4cTgApDBCCvyQyOB3MwPuGB/4pLICA9SjzbcAk9nweb
        ew6EldGKCasMofmVOlhX1bmeLv9sbTjHvpWtMvFhgAx5FEAoN5IQJwqb7uwj4f78Ypi0uMizdv1UZKxA
        zoKkrQmOa4rhhDEbpP07A1JGZJYygt1SY+qrNG6p0ms1heFw7P3IsVVo102RMJd+BPxbMmEh6zD5jS29
        aCZjRFU6KOwrgbKhA4tcZMicO8gIeQTSlT0kWk0jF2vLWeZ6LEBWQ+hMw5aoTCTs4fUuAuAX74TxcQ+M
        TcyhXYfGSDuqaWgOtHCNYHAxYERu5VRQaNjxKI8RQp5OqKSRiyWu192LBdh73gxpMRXAIYP2x+CtuxgC
        QHYxJmjoHif922p7oWwwhwB0O9vB43kM3Xd64PaNDtLucd6Eg4yAx5XI6Re/S2OjEp/V98UCYGfWD0cA
        sMuvczBbfCoC8KC1E7YrBklf1tXLJLzSlA8znkfAWe3QeLYB6qvrwGqxkWcnjbu9uAoHdYJMGhtVPADs
        7YqBCAC+6TNZBRGAzpq2SN/+tkYC0DBaDvhbcTT3COzdkYW8Bwpy8sHGOUExfDx0DFpRAY2N6mkA2IKq
        aBWacxQRgNzS7sjznNZrBEA+fBimZzyk7FcvXIWmhgukPT3jhePGXR4MIGWEv9LYqBBAd7xw7H0qM6TT
        1/K3MjXM//Q7sDuLIuHiaiPkXmagdDCXQHQ4mkno0MAwGNkB0u6wt6A7IOQRQDCHzXibxkaVptCk7UVf
        s3gA2FmNCIJeyuZDdXCopDMEgL6Y+JXFY4511xEA7EuWM6CZuAvaiV64Yq2FAvbnUPkZ4dM/0Rtq+9/f
        fEa7J+2MNjuef6jU7l8nU2dL6++WiGv683F7o0IrCfeLlGpJsaZoIAyBXYp8jN0xR0qvFbbs6kld4f+c
        IOml0mFJOvoWdJ4Y2DN1RLfVmceI7km1IoEUpE/8qU5K+h9hZND6lqkfEAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAG4BAABuAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAWQAA
        AG8FBgerDRAT6AMDBIAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AGQqLjPvMTU6+RkfJv1VaYH/DA8S5AAAAFkAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAcEBARyCAgJ4kFKVP+fsMX/OT9G/xohKP8pMz7/Hycv8QAAAGUAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAJAAAAWBQXGup3hZT/O0FJ/0NMV/8vNDr/Pk5f/3qZvv8vO0r/BgcJ4AMDBHAAAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANUJJAAAAAGomKi/wJyww/2Jwf/98ipn/GBwh/1Flff92lLf/M0FR/zNAT/9bc43/DxMX6QAA
        AFQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAgDAwNvBQUF31Rfa/+XqLr/KS0y/x4jKf9TZ37/gqPJ/yw4Rf9BUWP/fJvA/0JU
        aP8fJzD/HSQs7wAAAGQGCAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAsAAAAFAAAAUCAiJexxe4b/Mjc+/1Zhbv8wNTz/XXSO/5i85/+Psdn/aYOg/3eW
        uP8yQFH/Mj5M/36cvv9CUmT/AAAAzQAAAEoAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAGQAAAE4BAQGRAgICrwEBAZ4SFxzlHiMo/4aSn/91gIv/Fxwh/1Vqgf+VueL/ncLt/53C
        7f+dwu7/VmuE/0JSZP+Hp8z/UmZ9/y81PP9dZW//KCwx7wUGBqkAAABIAAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAUgECAY8JEQ3QCQ0L9FNSUf9APz7/ICo1/3qYuv9rhKL/LTU//y0yOf9UZ37/m8Dq/5zB
        7P+dw+//nMHt/5zB7P+Ut+D/ja/V/0hZbf80OkH/obDB/87h9v+zxNb/bnmE/ygsL+8FBgapAAAASAAA
        AAsAAAAAAAAAAAAAAAAGCgj1OWNQ/l+lhv8wVET/gn9+/5KOjP8zQE//k7fi/53C7v+Hp8z/eZa3/4Oi
        x/9MXnP/RFRn/3SQsP+avun/n8Xw/46w2P8+TV7/PUNK/6u7zf/P4vf/zeD1/8/i9//O4fb/s8TW/255
        hP8oLC/vBQYGqgAAAEgAAAALAAAAAA4ZFP9uwJz/g+W6/0uEa/9UVVP/ubWz/youNP9/n8X/ncPu/53D
        7v+exO//T2J3/zk+RP9ianT/KjA3/0VWav9mf5v/Mz9O/0dOVv+0xdf/z+L4/83g9f/N4PX/zeD1/83g
        9f/P4vf/zuH2/7PE1v9veYT/KCww7wUGBqkAAABPDhkU/22+m/+B4bf/ZLCP/zA3NP/Fwb//R0dI/154
        lf+dw+7/nMHs/53C7f9LXXL/SE5U/7jJ3P+ltcb/W2Nt/zxCSf9mb3r/vc/i/9Ll+v/O4fb/zuH2/8/i
        9//N4PX/zeD1/83g9f/N4PX/z+L3/87h9v+0xNf/ZnB6/woLDPMOGRT/bb6b/4Hgtv91zKb/Kj41/62p
        p/92dHL/Pk5i/5rA6/+ew+//nsPv/4alyv84RFP/MzlA/3qFkf+1xdj/vc/i/8HT5/+vv9H/g4+d/1xl
        bv9ueIP/sMDS/87h9v/P4vf/zeD1/83g9f/N4PX/zeD1/9Dj+f+ywtX/Fxkc/w4ZFP9tvpv/gN+2/33b
        sv80W0r/gHx8/6ypp/8jKTD/W3KO/3+dwP+Qstr/mb3n/5O23v9jfJj/JS03/ygsMf9NVV3/Q0lP/y0u
        L/89Ojn/VU9M/xoZGP8nKi3/bniE/7XG2P/P4vf/z+L3/83g9f/N4PX/z+L3/7DB0/8XGRz/DhkU/22+
        m/+A37X/geC3/0uEa/9VVVP/zcnG/yopKP8mJSX/Jigr/yQsNf88SVn/Q1Rm/zxKWf8jJyz/Kigl/1hT
        T/9+d3L/qKCa/8W8tv/Gvbn/PDk4/1tVUf9EQD7/MzY6/3aBjf+5y97/z+L3/87h9//P4vf/sMHT/xcZ
        HP8OGRT/bb6b/4Dftf+B4Lb/ZrOR/yszL/9wbm3/KSgn/4uDf/+MhID/Hhwb/2hiXf9sZWD/eXJt/5yU
        j//AuLL/1MzG/9rSzP/b087/3dXQ/8W+uv80MjH/nJSP/8i/uf+IgXz/PTo4/zc7QP9/i5j/vtDj/9Hk
        +v+xwdT/Fxkc/w4ZFP9tvpv/guG3/3zXr/9Vk3j/ERkV/zg0Mv+MhYD/z8fB/720r/8vLSv/bmpn/8C4
        s//SysX/3dXP/9vTzv/a0s3/29PO/9LKxf+/uLT/bmpo/y4sKv+8tK7/3NTP/9nRy//FvLf/fXZx/yoo
        J/82O0D/iJWj/6S0xP8XGhz/DxoV/229m/9ntJP/MldH/QgPDPMREBD7fXdz/9jPyv/BubX/a2Zk/h8d
        HPYFBQXnJCMi6kpIRvl+eXb/0cnE/9HJxP9+eXb/SkdF+SQiIeoFBQXnHx0c9mtmZP7AubX/2NDL/5iS
        j/9UUE78HRwa7wAAAM4MDg/MLzQ4+QoLDP8IDwz/MFNE/xMiHOYAAQGKAAAASAAAAKpLSUf/1c3I/5yW
        kv8NDAzmAAAAZwAAACgAAAAwAAAAhR4dHffEvbj/xL24/x4dHPcAAACFAAAAMAAAACgAAABnDQ0M5p2X
        lP/Uzcj/SkdG/wAAAKwAAAA9AAAAFgAAABsAAABnAAAAjwAAAJYAAACLAAAAPQAAAAMAAAAuERAQzYJ9
        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
        AA/4AAAf/gAAf/4AAH//AAD//4AB///4H/8=
</value>
  </data>
</root>